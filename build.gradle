/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

apply plugin: 'application'

group = 'io.swagger'
version = '1.0.0'

description = """product-catalog"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'

    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: springFoxVersion
    implementation group: 'io.springfox', name: 'springfox-oas', version: springFoxVersion
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: springFoxVersion

    implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.6.4'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'

    /* */
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudEurekaVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-ribbon:${springCloudRibbonVersion}"
    /*  */

    implementation "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"
    implementation("io.github.resilience4j:resilience4j-all:${resilience4jVersion}") // Optional, only required when you want to use the Decorators class
    implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")

    /*
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-cache:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"
    /**/


    /* For monitoring resilience4j */
    implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
    /**/
//    testimplementation "group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: ${springBootVersion}"
}
bootJar {
    mainClass = 'io.swagger.Swagger2SpringBoot'
    archiveFileName = "${rootProject.name}-${project.version}.jar"
}
//jar {
//    manifest {
//        attributes(
//                "Main-Class": "io.swagger.Swagger2SpringBoot",
//                "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
//    }
//}
